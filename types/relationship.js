"use strict";

var m        = require("mithril"),
    assign   = require("lodash.assign"),
    horsey   = require("horsey"),
    insignia = require("insignia"),
    
    db = require("../lib/firebase"),
    
    types = require("./types.css"),
    css   = require("./relationship.css");

module.exports = {
    controller : function(options) {
        var ctrl = this;
        
        ctrl.attach = function(el, init, context) {
            if(init) {
                return;
            }
            
            ctrl.tags   = insignia(el);
            ctrl.horsey = horsey(el, {
                suggestions : function(done) {
                    db.child("content").orderByChild("_schema").equalTo(options.details.schema).once("value", function(snap) {
                        var entries = snap.val();
                        
                        done(Object.keys(entries).map(function(key) {
                            return entries[key]._name;
                        }));
                    })
                },
                
                // Append the <ul> generated by horsey to the div parent for this field
                // Yes, this is gross.
                appendTo : el.parentNode.parentNode
            });
            
            el.addEventListener("insignia-evaluated", ctrl.changed);
            el.addEventListener("horsey-selected", ctrl.changed);
        };
        
        ctrl.changed = function(e) {
            console.log(e);
        };
    },
    
    view : function(ctrl, options) {
        var details = options.details;
        
        return m("div", { class : types[options.index ? "field" : "first"].join(" ") },
            m("label", { class : types.label.join(" ") }, details.name,
                m("input", assign({
                        value  : options.data || "",
                        class  : types.input.join(" "),
                        config : ctrl.attach
                    },
                    details.attrs || {}
                ))
            )
        );
    }
};
